{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "projectName": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring"
    },
    "vmPublisher": {
      "type": "string",
      "allowedValues": [
        "MicrosoftWindowsServer",
        "Canonical"
      ],
      "defaultValue": "Canonical"
    },
    "vmOffer": {
      "type": "string",
      "allowedValues": [
        "UbuntuServer",
        "WindowsServer"
      ],
      "defaultValue": "UbuntuServer"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s"
    },
    "vmStorageAcctType": {
      "type": "string",
      "defaultValue": "Standard_LRS"
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Nano-Server",
        "2016-Datacenter-with-Containers",
        "2016-Datacenter",
        "2019-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "16.04.0-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.5-LTS",
        "16.04.0-LTS",
        "18.04-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
      }
    },
    "numberOfStorageAccounts": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of storage accounts required"
      }
    },
    "accountSasProperties": {
      "type": "object",
      "defaultValue": {
        "signedServices": "b",
        "signedPermission": "rw",
        "signedExpiry": "2019-05-01T00:00:01Z",
        "signedResourceTypes": "o"
      }
    }
  },
  "variables": {
    "networkInterfaceName": "[concat(parameters('projectName'), '-nin')]",
    "networkSecurityGroupName": "[concat(parameters('projectName'), '-nsg')]",
    "virtualNetworkName": "[concat(parameters('projectName'), '-vnet')]",
    "virtualMachineName": "[concat(parameters('projectName'), '-vm')]",
    "publicIpAddressName": "[concat(parameters('projectName'), '-ip')]",
    "templateStoreName": "[concat(parameters('projectName'), 'linkedstore')]",
    "diagnosticsStorageAccountName": "[concat(parameters('projectName'), 'diagstorage')]",
    "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
    "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', 'default')]",
    "keyVaultName": "[concat(parameters('projectName'), 'keyvault')]"
  },
  "resources": [
    {
      "name": "storageAccountLinkedTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-11-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri":"[concat('https://clemykinglinkedstore.blob.core.windows.net/linkedtemplates/StorageAccount.json?', listAccountSas(concat('Microsoft.Storage/storageAccounts/', variables('templateStoreName')), '2018-07-01', parameters('accountSasProperties')).accountSasToken)]"
        },
        "parameters": {
          "name":{
            "value": "[variables('diagnosticsStorageAccountName')]"
          },
          "location":{
            "value": "[parameters('location')]"
          },
          "numberOf": {
            "value": "[parameters('numberOfStorageAccounts')]"
          }
        }
      }
    },
    {
      "name": "[variables('publicIpAddressName')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "Dynamic"
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "name": "virtualNetworkLinkedTemplate",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-11-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat('https://clemykinglinkedstore.blob.core.windows.net/linkedtemplates/VirtualNetwork.json?', listAccountSas(concat('Microsoft.Storage/storageAccounts/', variables('templateStoreName')), '2018-07-01', parameters('accountSasProperties')).accountSasToken)]"
        },
        "parameters": {
          "name":{
            "value": "[variables('virtualNetworkName')]"
          },
          "location":{
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "name": "[variables('networkInterfaceName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-10-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
        "virtualNetworkLinkedTemplate",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgId')]"
        }
      }
    },
    {
      "name": "[variables('networkSecurityGroupName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2018-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "name": "[variables('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('networkInterfaceName'))]",
        "storageAccountLinkedTemplate"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          },
          "imageReference": {
            "publisher": "[parameters('vmPublisher')]",
            "offer": "[parameters('vmOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('projectName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference('storageAccountLinkedTemplate').outputs.storageUri.value]"
          }
        }
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    }
  }
}
